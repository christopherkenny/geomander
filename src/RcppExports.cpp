// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// adjlist2matrix
NumericMatrix adjlist2matrix(List adj);
RcppExport SEXP _geomander_adjlist2matrix(SEXP adjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type adj(adjSEXP);
    rcpp_result_gen = Rcpp::wrap(adjlist2matrix(adj));
    return rcpp_result_gen;
END_RCPP
}
// contiguity
IntegerVector contiguity(List adj, IntegerVector group);
RcppExport SEXP _geomander_contiguity(SEXP adjSEXP, SEXP groupSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type adj(adjSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type group(groupSEXP);
    rcpp_result_gen = Rcpp::wrap(contiguity(adj, group));
    return rcpp_result_gen;
END_RCPP
}
// countconnections
IntegerMatrix countconnections(IntegerMatrix dm);
RcppExport SEXP _geomander_countconnections(SEXP dmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type dm(dmSEXP);
    rcpp_result_gen = Rcpp::wrap(countconnections(dm));
    return rcpp_result_gen;
END_RCPP
}
// localgeary
NumericVector localgeary(NumericVector x, NumericMatrix mat);
RcppExport SEXP _geomander_localgeary(SEXP xSEXP, SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    rcpp_result_gen = Rcpp::wrap(localgeary(x, mat));
    return rcpp_result_gen;
END_RCPP
}
// globalgeary
double globalgeary(NumericVector x, NumericMatrix mat);
RcppExport SEXP _geomander_globalgeary(SEXP xSEXP, SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    rcpp_result_gen = Rcpp::wrap(globalgeary(x, mat));
    return rcpp_result_gen;
END_RCPP
}
// localgstar
NumericVector localgstar(NumericVector x, NumericMatrix mat);
RcppExport SEXP _geomander_localgstar(SEXP xSEXP, SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    rcpp_result_gen = Rcpp::wrap(localgstar(x, mat));
    return rcpp_result_gen;
END_RCPP
}
// localmoran
List localmoran(NumericVector x, NumericMatrix mat);
RcppExport SEXP _geomander_localmoran(SEXP xSEXP, SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    rcpp_result_gen = Rcpp::wrap(localmoran(x, mat));
    return rcpp_result_gen;
END_RCPP
}
// globalmoran
List globalmoran(NumericVector x, NumericMatrix mat);
RcppExport SEXP _geomander_globalmoran(SEXP xSEXP, SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    rcpp_result_gen = Rcpp::wrap(globalmoran(x, mat));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_geomander_adjlist2matrix", (DL_FUNC) &_geomander_adjlist2matrix, 1},
    {"_geomander_contiguity", (DL_FUNC) &_geomander_contiguity, 2},
    {"_geomander_countconnections", (DL_FUNC) &_geomander_countconnections, 1},
    {"_geomander_localgeary", (DL_FUNC) &_geomander_localgeary, 2},
    {"_geomander_globalgeary", (DL_FUNC) &_geomander_globalgeary, 2},
    {"_geomander_localgstar", (DL_FUNC) &_geomander_localgstar, 2},
    {"_geomander_localmoran", (DL_FUNC) &_geomander_localmoran, 2},
    {"_geomander_globalmoran", (DL_FUNC) &_geomander_globalmoran, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_geomander(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
